function test_flac1() {
  $(dirname $0)/../bin/flac2alac $TEST_FLAC1
  ALAC_FILE="$(dirname $TEST_FLAC1)/flac1.m4a"

  assertTrue    "should have an alac file" \
                "[ -s '$ALAC_FILE' ]"

  assertEquals  "return artist" \
                "John Mayer"     \
                "`get_tag_from_alac $ALAC_FILE artist`" 

  assertEquals  "return title" \
                "Banter #7"     \
                "`get_tag_from_alac $ALAC_FILE title`" 

  #assertEquals  "return album_artist" \
  #              ""     \
  #              "`get_tag_from_flac $TEST_FLAC1 album_artist`" 


  #assertEquals  "return album" \
  #              "2013-04-25, Tuscaloosa Amphitheater, Tuscaloosa, AL"     \
  #              "`get_tag_from_flac $TEST_FLAC1 album`" 

  #assertEquals  "return date" \
  #              "2013"     \
  #              "`get_tag_from_flac $TEST_FLAC1 date`" 

  #assertFalse   "return genre" \
  #              "get_tag_from_flac $TEST_FLAC1 genre" 

  #assertEquals  "return track_number" \
  #              "16"     \
  #              "`get_tag_from_flac $TEST_FLAC1 track_number`" 

  #assertFalse   "return track_total" \
  #              "get_tag_from_flac $TEST_FLAC1 track_total" 

  #assertFalse   "return disk_number" \
  #              "get_tag_from_flac $TEST_FLAC1 disk_number" 

  #assertFalse   "return disk_total" \
  #              "get_tag_from_flac $TEST_FLAC1 disk_total" 

  #assertEquals  "return description" \
  #              "has a jpg image"     \
  #              "`get_tag_from_flac $TEST_FLAC1 description`" 

  #assertFalse   "return composer" \
  #              "get_tag_from_flac $TEST_FLAC1 composer" 

  #art_file=`get_tag_from_flac $TEST_FLAC1 art_file`
  #assertTrue    "art file is not empty" \
  #              "[ ! -z $art_file ]"

  #assertEquals  "return art_file" \
  #              "JPEG image data, EXIF standard" \
  #              "`file -b $art_file`"

  #assertEquals  "artfile has correct md5 sum" \
  #              "ba738cea1bf5753e9fc48a08088258b4" \
  #              "`cat ${art_file} | md5`"

  assertTrue    "should delete the alac file" \
                "rm '$ALAC_FILE'"

}

#function test_add_tag_to_alac() {
#  assertFalse   "return false without input" \
#                "add_tag_to_alac"
#
#  assertFalse   "return false without data" \
#                "add_tag_to_alac $TEST_ALAC1"
#
#  assertTrue    "return true when setting artist" \
#                "add_tag_to_alac $TEST_ALAC1 'artist=blah'"
#
#  assertTrue    "return true when setting disk_number" \
#                "add_tag_to_alac $TEST_ALAC1 'disc_number=1'"
#
#  assertTrue    "return true when adding art from a jpeg" \
#                "add_tag_to_alac $TEST_ALAC1 'art_file=$ART_FILE1'"
#}
#
#function test_get_tag_from_alac() {
#  assertEquals  "return artist that was set"    \
#                "blah"                          \
#                "`get_tag_from_alac $TEST_ALAC1 'artist'`"
#
#  assertEquals  "return disc_number that was set"    \
#                "1"                          \
#                "`get_tag_from_alac $TEST_ALAC1 'disc_number'`"
#
#  assertEquals  "return disc_total that was set"    \
#                "0"                          \
#                "`get_tag_from_alac $TEST_ALAC1 'disc_total'`"
#
#  assertEquals  "return date that was set"    \
#                "2013"                          \
#                "`get_tag_from_alac $TEST_ALAC1 'date'`"
#}
#
#function test_get_image_from_flac() {
#  assertFalse   "return false if no input file is set" \
#                "get_image_from_flac"
#
#  assertTrue    "return true when we have a jpeg image" \
#                "[ -s `get_image_from_flac $TEST_FLAC1` ]"
#
#  assertFalse   "return false if input has no image" \
#                "get_image_from_flac $TEST_FLAC2"
#
#  assertTrue    "return true when we have a png image" \
#                "[ -s `get_image_from_flac $TEST_FLAC3` ]"
#}

function oneTimeSetUp() {
  source $(dirname $0)/../lib/convert.inc
  source $(dirname $0)/../lib/meta.inc
  source $(dirname $0)/../lib/system.inc
  TEST_FLAC1="$(dirname $0)/files/flac1.flac"
  TEST_FLAC2="$(dirname $0)/files/flac2.flac"
  TEST_FLAC3="$(dirname $0)/files/flac3.flac"
}

function oneTimeTearDown() {
  __rmtemp
}

source $(dirname $0)/shunit/src/shunit2
# vim: set ft=sh :
