function test_flac_valid() {
  assertTrue  "should return true with a valid flac file" \
              "flac_valid $TEST_FLAC1"

  assertFalse "should return false when not a flac file" \
              "flac_valid ./files/README"
}

function test_flac_to_wav() {
  assertFalse "should return false if flac file is not in \$1" \
              "flac_to_wav"

  assertTrue "should have a non-empty file as output" \
              "[ -s $(flac_to_wav $TEST_FLAC1) ]"

  assertTrue "should return true if all is good" \
              "flac_to_wav $TEST_FLAC1"

  assertTrue "should have a file type of WAVE" \
              "file `flac_to_wav $TEST_FLAC1` | grep WAVE"

}

function test_wav_to_alac() {
  test_wav="$(flac_to_wav $TEST_FLAC1)"
  assertFalse "should return false if wav file is not in \$1" \
              "wav_to_alac"

  assertFalse "should return false if wav doesn't exist" \
              "wav_to_alac 'blah'"

  assertTrue "should have a non-empty file as output" \
              "[ -s $(wav_to_alac $test_wav) ]"

  assertTrue "should return true if all is good" \
              "wav_to_alac $test_wav"

  assertTrue "should have a file type of MPEG" \
              "file `wav_to_alac $test_wav` | grep MPEG"
}

function test_flac_to_alac() {
  assertFalse   "should return false if wav file is not in \$1" \
                "flac_to_alac"

  assertFalse   "should return false if wav doesn't exist" \
                "flac_to_alac 'blah'"

  assertTrue    "should have a non-empty file as output" \
                 "[ -s $(flac_to_alac $TEST_FLAC1) ]"

  assertTrue    "should return true if all is good" \
                 "flac_to_alac $TEST_FLAC1"

  assertTrue    "should have a file type of MPEG" \
                "file `flac_to_alac $TEST_FLAC1` | grep MPEG"
}

function test_conversion_stats() {
  assertEquals  "input and output are the same size" \
                "ALAC is 100% the size of the input FLAC" \
                "`conversion_stats $TEST_FLAC1 $TEST_FLAC1`"
}

function oneTimeSetUp() {
  source $(dirname $0)/../lib/convert.inc
  source $(dirname $0)/../lib/system.inc
  TEST_FLAC1="$(dirname $0)/files/flac1.flac"
}

function tearDown() {
  __rmtemp
}

source $(dirname $0)/../lib/system.inc
source $(dirname $0)/shunit/src/shunit2
# vim: set ft=sh :
